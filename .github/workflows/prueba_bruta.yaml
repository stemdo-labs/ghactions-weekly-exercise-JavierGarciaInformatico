name: funcionamiento en bruto

on:
  workflow_dispatch:
    inputs:
      PRODUCCION:
        description: 'desplegar en producción (si/no)'
        required: true
        default: 'no'
      VERSION:
        description: 'versión de la imagen Docker'
        required: true
        default: '1'

#   push:
#     branches:
#       - main
#       - development

jobs:
  job-ci:
    runs-on: [weeklyjaviergarcia]
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4
      - name: construir la imagen Docker
        run: |
          docker build -t ${{vars.DOCKERUSER}}/enbruto:${{ github.event.inputs.VERSION }} .

#https://github.com/docker/login-action

      - name: Login a Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERUSER }}
          password: ${{ secrets.DOCKERTOKEN }}
      
      - name: Subir la imagen Docker a Docker Hub
        run: |
          docker push ${{vars.DOCKERUSER}}/enbruto:${{ github.event.inputs.VERSION }}

  job-cd:
    runs-on: [weeklyjaviergarcia]
    needs: job-ci
    steps:
      - name: run de contenedor de pruebas
        run: docker run -d -p 8080:8080 --name pruebas ${{ vars.DOCKERUSER }}/enbruto:${{ github.event.inputs.VERSION }}

      - name: test en producción
        if: ${{ github.event.inputs.PRODUCCION == 'si' }}
        run: |
          echo "realizando pruebas en producción..."

          echo "test 1"
          if curl -o /dev/null -s -w "%{http_code}" localhost:8080 | grep -q "200"; then
            echo "Correcto"
          else
            echo "Fallo detectado"
          fi

          echo "test 2"
          if curl -s localhost:8080 | grep -iq "luisk"; then
            echo "Correcto"
          else
            echo "Fallo detectado"
            exit 1
          fi

      - name: desplegar en UAT si no es producción
        if: ${{ github.event.inputs.PRODUCCION != 'si' }}
        run: |
          echo "desplegando UAT sin tests con la imagen ${{ vars.DOCKERUSER }}/enbruto:${{ github.event.inputs.VERSION }}"

  limpieza-final:
      runs-on: [weeklyjaviergarcia]
      needs: job-cd
      if: always()  # asegura que este job se ejecute siempre haya fallado o no antes otros
      steps:
        - name: elimina el contenedor de pruebas
          run: docker rm -f pruebas
        
        - name: elimina la imagen de enbruto
          run: docker rmi ${{ vars.DOCKERUSER }}/enbruto:${{ github.event.inputs.VERSION }} || true